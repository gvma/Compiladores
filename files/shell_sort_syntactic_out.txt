1  int n = 1000;
          S = DeclId S
          DeclId = Type LId
          Type = 'int'
          LId = 'id' IdAttr LIdr ';'
          IdAttr = ArrayOpt AttrOpt
          ArrayOpt = epsilon
          AttrOpt = '='
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = 'cteInt'
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
          LIdr = epsilon
   2  
   3  proc shellSort(int arr[n]) {
          S = ProcDecl S
          ProdDecl = 'procDef' 'id' Param Body
          Param = '(' LParam ')'
          LParam = Type 'id' ArrayOpt LParamr
          Type = 'int'
          ArrayOpt = '[' Ea ']'
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          LParam = epsilon
   4  	int gap = n / 2;
          Body = '{' BodyPart '}'
          BodyPart = DeclId BodyPart
          DeclId = Type LId
          Type = 'int'
          LId = 'id' IdAttr LIdr ';'
          IdAttr = ArrayOpt AttrOpt
          ArrayOpt = epsilon
          AttrOpt = '='
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = 'opDiv' Pa Tar
          Pa = Fa Par
          Fa = 'cteInt'
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
          LIdr = epsilon
   5  	while (gap > 0) {
          BodyPart = Command BodyPart
          Command = 'whileLoop' '(' Eb ')' Body 
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = 'opGreater' Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = 'cteInt'
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
   6  		for (int i : (gap, n, 1)) {
          Body = '{' BodyPart '}'
          BodyPart = Command BodyPart
          Command = 'forLoop' '(' 'typeInt' 'id' ':' '(' FP ',' FP ',' FP ')' ')' Body
          FP = 'id'
          FP = 'id'
          FP = 'constInt'
   7  			int temp = arr[i];
          Body = '{' BodyPart '}'
          BodyPart = DeclId BodyPart
          DeclId = Type LId
          Type = 'int'
          LId = 'id' IdAttr LIdr ';'
          IdAttr = ArrayOpt AttrOpt
          ArrayOpt = epsilon
          AttrOpt = '='
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          IdOpt = ArrayOpt
          ArrayOpt = '[' Ea ']'
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
          LIdr = epsilon
   8  			int j = i;
          BodyPart = DeclId BodyPart
          DeclId = Type LId
          Type = 'int'
          LId = 'id' IdAttr LIdr ';'
          IdAttr = ArrayOpt AttrOpt
          ArrayOpt = epsilon
          AttrOpt = '='
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
          LIdr = epsilon
   9  			while (j >= gap && (arr[j - gap] > temp)) {
          BodyPart = Command BodyPart
          Command = 'whileLoop' '(' Eb ')' Body 
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = 'opGreq' Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = 'opAnd' Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = '(' Ec ')'
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          IdOpt = ArrayOpt
          ArrayOpt = '[' Ea ']'
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = 'opSub' Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = 'opGreater' Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
  10  				arr[j] = arr[j - gap];
          Body = '{' BodyPart '}'
          BodyPart = LId BodyPart
          LId = 'id' IdAttr LIdr ';'
          IdAttr = ArrayOpt AttrOpt
          ArrayOpt = '[' Ea ']'
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          AttrOpt = '='
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          IdOpt = ArrayOpt
          ArrayOpt = '[' Ea ']'
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = 'opSub' Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
          LIdr = epsilon
  11  				j = j - gap;
          BodyPart = LId BodyPart
          LId = 'id' IdAttr LIdr ';'
          IdAttr = ArrayOpt AttrOpt
          ArrayOpt = epsilon
          AttrOpt = '='
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = 'opSub' Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
          LIdr = epsilon
  12  			}
  13  			arr[j] = temp; 			
          BodyPart = epsilon
          BodyPart = LId BodyPart
          LId = 'id' IdAttr LIdr ';'
          IdAttr = ArrayOpt AttrOpt
          ArrayOpt = '[' Ea ']'
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          AttrOpt = '='
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
          LIdr = epsilon
  14  		}
  15  		gap = gap / 2; 
          BodyPart = epsilon
          BodyPart = LId BodyPart
          LId = 'id' IdAttr LIdr ';'
          IdAttr = ArrayOpt AttrOpt
          ArrayOpt = epsilon
          AttrOpt = '='
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = 'opDiv' Pa Tar
          Pa = Fa Par
          Fa = 'cteInt'
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
          LIdr = epsilon
  16  	}
  17  }
          BodyPart = epsilon
  18  
          BodyPart = epsilon
  19  fun int main() {
          S = FunDecl S
          FunDecl = 'funDef' Type FunName Param Body
          Type = 'int'
          FunName = 'main'
          Param = '(' LParam ')'
          LParam = epsilon
  20  	int arr[n];
          Body = '{' BodyPart '}'
          BodyPart = DeclId BodyPart
          DeclId = Type LId
          Type = 'int'
          LId = 'id' IdAttr LIdr ';'
          IdAttr = ArrayOpt AttrOpt
          ArrayOpt = '[' Ea ']'
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          AttrOpt = epsilon
          LIdr = epsilon
  21  	read(arr);
          BodyPart = Command BodyPart
          Command = 'scan' '(' LParamCall ')' ';'
          ParamCall = 'id' ArrayOpt LParamCallr
          ArrayOpt = epsilon
          LParamCallr = epsilon
  22  	for (int i : (0, n, 1)) {
          BodyPart = Command BodyPart
          Command = 'forLoop' '(' 'typeInt' 'id' ':' '(' FP ',' FP ',' FP ')' ')' Body
          FP = 'constInt'
          FP = 'id'
          FP = 'constInt'
  23  		print("%d ", arr[i]);
          Body = '{' BodyPart '}'
          BodyPart = Command BodyPart
          Command = 'print' '(' Ec LParamCall ')' ';'
          Ec = Fc Ecr
          Fc = 'constStr'
          Ecr = epsilon
          PrintParam = ',' LParamCall
          ParamCall = 'id' ArrayOpt LParamCallr
          ArrayOpt = '[' Ea ']'
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          LParamCallr = epsilon
  24  	}
  25  	shellSort(arr);
          BodyPart = epsilon
          BodyPart = LId BodyPart
          LId = 'id' IdAttr LIdr ';'
          IdAttr = FunCall
          FunCall = '(' LParamCall ')'
          ParamCall = 'id' ArrayOpt LParamCallr
          ArrayOpt = epsilon
          LParamCallr = epsilon
          LIdr = epsilon
  26  	for (int i : (0, n, 1)) {
          BodyPart = Command BodyPart
          Command = 'forLoop' '(' 'typeInt' 'id' ':' '(' FP ',' FP ',' FP ')' ')' Body
          FP = 'constInt'
          FP = 'id'
          FP = 'constInt'
  27  		print("%d ", arr[i]);
          Body = '{' BodyPart '}'
          BodyPart = Command BodyPart
          Command = 'print' '(' Ec LParamCall ')' ';'
          Ec = Fc Ecr
          Fc = 'constStr'
          Ecr = epsilon
          PrintParam = ',' LParamCall
          ParamCall = 'id' ArrayOpt LParamCallr
          ArrayOpt = '[' Ea ']'
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          LParamCallr = epsilon
  28  	}
  29  	print("\n");
          BodyPart = epsilon
          BodyPart = Command BodyPart
          Command = 'print' '(' Ec LParamCall ')' ';'
          Ec = Fc Ecr
          Fc = 'constStr'
          Ecr = epsilon
          PrintParam = epsilon
  30  	return 0;
          BodyPart = Return ';'
          Return = 'funRet' Ec
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = 'cteInt'
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
  31  }
          S = epsilon