1  proc fib(int n) {
          S = ProcDecl S
          ProdDecl = 'procDef' 'id' Param Body
          Param = '(' LParam ')'
          LParam = Type 'id' ArrayOpt LParamr
          Type = 'int'
          ArrayOpt = epsilon
          LParam = epsilon
   2  	const int a = 0;
          Body = '{' BodyPart '}'
          BodyPart = DeclId BodyPart
          Type = 'int'
          LId = 'id' IdAttr LIdr ';'
          IdAttr = ArrayOpt AttrOpt
          ArrayOpt = epsilon
          AttrOpt = '='
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = 'cteInt'
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
          LIdr = epsilon
   3  	int n1 = 0, n2 = 1, n3;
          BodyPart = DeclId BodyPart
          DeclId = Type LId
          Type = 'int'
          LId = 'id' IdAttr LIdr ';'
          IdAttr = ArrayOpt AttrOpt
          ArrayOpt = epsilon
          AttrOpt = '='
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = 'cteInt'
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
          LIdr = ',' 'id' ArrayOpt AttrOpt LIdr
          ArrayOpt = epsilon
          AttrOpt = '='
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = 'cteInt'
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
          LIdr = ',' 'id' ArrayOpt AttrOpt LIdr
          ArrayOpt = epsilon
          AttrOpt = epsilon
          LIdr = epsilon
   4  	if (n == 0) {
          BodyPart = Command BodyPart
          Command = 'condIf' '(' Eb ')' Body Ifr
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = 'opEquals' Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = 'cteInt'
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
   5  		print("%d\n", n);
          Body = '{' BodyPart '}'
          BodyPart = Command BodyPart
          Command = 'print' '(' Ec LParamCall ')' ';'
          Ec = Fc Ecr
          Fc = 'constStr'
          Ecr = epsilon
          PrintParam = ',' LParamCall
          ParamCall = 'id' ArrayOpt LParamCallr
          ArrayOpt = epsilon
          LParamCallr = epsilon
   6  	} ceif (n == 1) {
          BodyPart = epsilon
          Ifr = 'condElseIf' '(' Eb ')' Body Ifr
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = 'opEquals' Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = 'cteInt'
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
   7  		print("0, %d\n", n);
          Body = '{' BodyPart '}'
          BodyPart = Command BodyPart
          Command = 'print' '(' Ec LParamCall ')' ';'
          Ec = Fc Ecr
          Fc = 'constStr'
          Ecr = epsilon
          PrintParam = ',' LParamCall
          ParamCall = 'id' ArrayOpt LParamCallr
          ArrayOpt = epsilon
          LParamCallr = epsilon
   8  	} else {
          BodyPart = epsilon
          Ifr = 'condElse' Body
   9  		string separator = "";
          Body = '{' BodyPart '}'
          BodyPart = DeclId BodyPart
          DeclId = Type LId
          Type = 'string'
          LId = 'id' IdAttr LIdr ';'
          IdAttr = ArrayOpt AttrOpt
          ArrayOpt = epsilon
          AttrOpt = '='
          Ec = Fc Ecr
          Fc = 'constStr'
          Ecr = epsilon
          LIdr = epsilon
  10  		print("0, 1, ");
          BodyPart = Command BodyPart
          Command = 'print' '(' Ec LParamCall ')' ';'
          Ec = Fc Ecr
          Fc = 'constStr'
          Ecr = epsilon
          PrintParam = epsilon
  11  		while (true) {
          BodyPart = Command BodyPart
          Command = 'whileLoop' '(' Eb ')' Body 
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = 'cteBool'
          Tbr = epsilon
          Ebr = epsilon
  12  			n3 = n1 + n2;
          Body = '{' BodyPart '}'
          BodyPart = LId BodyPart
          LId = 'id' IdAttr LIdr ';'
          IdAttr = ArrayOpt AttrOpt
          ArrayOpt = epsilon
          AttrOpt = '='
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = 'opAdd' Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
          LIdr = epsilon
  13  			print("%s%d", separator, n3);
          BodyPart = Command BodyPart
          Command = 'print' '(' Ec LParamCall ')' ';'
          Ec = Fc Ecr
          Fc = 'constStr'
          Ecr = epsilon
          PrintParam = ',' LParamCall
          ParamCall = 'id' ArrayOpt LParamCallr
          ArrayOpt = epsilon
          LParamCallr = ',' 'id' ArrayOpt LParamCallr
          ArrayOpt = epsilon
          LParamCallr = epsilon
  14  			if (n3 >= n) {
          BodyPart = Command BodyPart
          Command = 'condIf' '(' Eb ')' Body Ifr
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = 'opGreq' Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
  15  				print("\n");
          Body = '{' BodyPart '}'
          BodyPart = Command BodyPart
          Command = 'print' '(' Ec LParamCall ')' ';'
          Ec = Fc Ecr
          Fc = 'constStr'
          Ecr = epsilon
          PrintParam = epsilon
  16  				return;
          BodyPart = Return ';'
          Return = 'funRet' Ec
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
  17  			}
  18  			separator = ", ";
          Ifr = epsilon
          BodyPart = LId BodyPart
          LId = 'id' IdAttr LIdr ';'
          IdAttr = ArrayOpt AttrOpt
          ArrayOpt = epsilon
          AttrOpt = '='
          Ec = Fc Ecr
          Fc = 'constStr'
          Ecr = epsilon
          LIdr = epsilon
  19  			n1 = n2;
          BodyPart = LId BodyPart
          LId = 'id' IdAttr LIdr ';'
          IdAttr = ArrayOpt AttrOpt
          ArrayOpt = epsilon
          AttrOpt = '='
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
          LIdr = epsilon
  20  			n2 = n3;
          BodyPart = LId BodyPart
          LId = 'id' IdAttr LIdr ';'
          IdAttr = ArrayOpt AttrOpt
          ArrayOpt = epsilon
          AttrOpt = '='
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = Id
          Id = 'id' IdOpt
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
          LIdr = epsilon
  21  		}
  22  	}
          BodyPart = epsilon
  23  }
          BodyPart = epsilon
  24  
          BodyPart = epsilon
  25  fun int main() {
          S = FunDecl S
          FunDecl = 'funDef' Type FunName Param Body
          Type = 'int'
          FunName = 'main'
          Param = '(' LParam ')'
          LParam = epsilon
  26  	int n;
          Body = '{' BodyPart '}'
          BodyPart = DeclId BodyPart
          DeclId = Type LId
          Type = 'int'
          LId = 'id' IdAttr LIdr ';'
          IdAttr = ArrayOpt AttrOpt
          ArrayOpt = epsilon
          AttrOpt = epsilon
          LIdr = epsilon
  27  	read(n);
          BodyPart = Command BodyPart
          Command = 'scan' '(' LParamCall ')' ';'
          ParamCall = 'id' ArrayOpt LParamCallr
          ArrayOpt = epsilon
          LParamCallr = epsilon
  28  	fib(n);
          BodyPart = LId BodyPart
          LId = 'id' IdAttr LIdr ';'
          IdAttr = FunCall
          FunCall = '(' LParamCall ')'
          ParamCall = 'id' ArrayOpt LParamCallr
          ArrayOpt = epsilon
          LParamCallr = epsilon
          LIdr = epsilon
  29  	return 0;
          BodyPart = Return ';'
          Return = 'funRet' Ec
          Ec = Fc Ecr
          Fc = Eb
          Eb = Tb Ebr
          Tb = Fb Tbr
          Fb = Ra Fbr
          Ra = Ea Rar
          Ea = Ta Ear
          Ta = Pa Tar
          Pa = Fa Par
          Fa = 'cteInt'
          Par = epsilon
          Tar = epsilon
          Ear = epsilon
          Rar = epsilon
          Fbr = epsilon
          Tbr = epsilon
          Ebr = epsilon
          Ecr = epsilon
  30  }
          S = epsilon
