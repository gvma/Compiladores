   1  int n = 1000;
          [0002, 0002] (0008,              typeInt) {int}
          [0002, 0006] (0004,                   id) {n}
          [0002, 0008] (0040,             opAttrib) {=}
          [0002, 0010] (0016,             constInt) {1000}
          [0002, 0014] (0043,            semicolon) {;}
   2  
   3  proc shellSort(int arr(n)) {
          [0004, 0002] (0042,              procDef) {proc}
          [0004, 0007] (0004,                   id) {shellSort}
          [0004, 0016] (0005,             paramBeg) {(}
          [0004, 0017] (0008,              typeInt) {int}
          [0004, 0021] (0004,                   id) {arr}
          [0004, 0024] (0005,             paramBeg) {(}
          [0004, 0025] (0004,                   id) {n}
          [0004, 0026] (0006,             paramEnd) {)}
          [0004, 0027] (0006,             paramEnd) {)}
   4  	int gap = n / 2;
          [0005, 0001] (0014,           beginScope) {{}
          [0005, 0003] (0008,              typeInt) {int}
          [0005, 0007] (0004,                   id) {gap}
          [0005, 0011] (0040,             opAttrib) {=}
          [0005, 0013] (0004,                   id) {n}
          [0005, 0015] (0025,                opDiv) {/}
          [0005, 0017] (0016,             constInt) {2}
          [0005, 0018] (0043,            semicolon) {;}
   5  	while (gap > 0) {
          [0006, 0003] (0045,            whileLoop) {while}
          [0006, 0009] (0005,             paramBeg) {(}
          [0006, 0010] (0004,                   id) {gap}
          [0006, 0014] (0030,            opGreater) {>}
          [0006, 0016] (0016,             constInt) {0}
          [0006, 0017] (0006,             paramEnd) {)}
   6  		for (int i :(gap, n, 1)) {
          [0007, 0001] (0014,           beginScope) {{}
          [0007, 0004] (0044,              forLoop) {for}
          [0007, 0008] (0005,             paramBeg) {(}
          [0007, 0009] (0008,              typeInt) {int}
          [0007, 0013] (0004,                   id) {i}
          [0007, 0016] (0018,                colon) {:}
          [0007, 0017] (0004,                   id) {gap}
          [0007, 0020] (0007,             commaSep) {,}
          [0007, 0022] (0004,                   id) {n}
          [0007, 0023] (0007,             commaSep) {,}
          [0007, 0025] (0016,             constInt) {1}
          [0007, 0026] (0006,             paramEnd) {)}
          [0007, 0027] (0006,             paramEnd) {)}
   7  			int temp = arr[i];
          [0008, 0001] (0014,           beginScope) {{}
          [0008, 0005] (0008,              typeInt) {int}
          [0008, 0009] (0004,                   id) {temp}
          [0008, 0014] (0040,             opAttrib) {=}
          [0008, 0016] (0004,                   id) {arr}
          [0008, 0019] (0026,             arrBegin) {[}
          [0008, 0020] (0004,                   id) {i}
          [0008, 0021] (0027,               arrEnd) {]}
          [0008, 0022] (0043,            semicolon) {;}
   8  			int j = i;
          [0009, 0005] (0008,              typeInt) {int}
          [0009, 0009] (0004,                   id) {j}
          [0009, 0011] (0040,             opAttrib) {=}
          [0009, 0013] (0004,                   id) {i}
          [0009, 0014] (0043,            semicolon) {;}
   9  			while (j >= gap && (arr[j - gap] > temp)) {
          [0010, 0005] (0045,            whileLoop) {while}
          [0010, 0011] (0005,             paramBeg) {(}
          [0010, 0012] (0004,                   id) {j}
          [0010, 0014] (0032,               opGreq) {>=}
          [0010, 0017] (0004,                   id) {gap}
          [0010, 0021] (0036,                opAnd) {&&}
          [0010, 0024] (0005,             paramBeg) {(}
          [0010, 0025] (0004,                   id) {arr}
          [0010, 0028] (0026,             arrBegin) {[}
          [0010, 0029] (0004,                   id) {j}
          [0010, 0031] (0023,                opSub) {-}
          [0010, 0033] (0004,                   id) {gap}
          [0010, 0036] (0027,               arrEnd) {]}
          [0010, 0038] (0030,            opGreater) {>}
          [0010, 0040] (0004,                   id) {temp}
          [0010, 0044] (0006,             paramEnd) {)}
          [0010, 0045] (0006,             paramEnd) {)}
  10  				arr[j] = arr[j - gap];
          [0011, 0001] (0014,           beginScope) {{}
          [0011, 0006] (0004,                   id) {arr}
          [0011, 0009] (0026,             arrBegin) {[}
          [0011, 0010] (0004,                   id) {j}
          [0011, 0011] (0027,               arrEnd) {]}
          [0011, 0013] (0040,             opAttrib) {=}
          [0011, 0015] (0004,                   id) {arr}
          [0011, 0018] (0026,             arrBegin) {[}
          [0011, 0019] (0004,                   id) {j}
          [0011, 0021] (0023,                opSub) {-}
          [0011, 0023] (0004,                   id) {gap}
          [0011, 0026] (0027,               arrEnd) {]}
          [0011, 0027] (0043,            semicolon) {;}
  11  				j = j - gap;
          [0012, 0006] (0004,                   id) {j}
          [0012, 0008] (0040,             opAttrib) {=}
          [0012, 0010] (0004,                   id) {j}
          [0012, 0012] (0023,                opSub) {-}
          [0012, 0014] (0004,                   id) {gap}
          [0012, 0017] (0043,            semicolon) {;}
  12  			}
  13  			arr[j] = temp; 			
          [0014, 0001] (0015,             endScope) {}}
          [0014, 0005] (0004,                   id) {arr}
          [0014, 0008] (0026,             arrBegin) {[}
          [0014, 0009] (0004,                   id) {j}
          [0014, 0010] (0027,               arrEnd) {]}
          [0014, 0012] (0040,             opAttrib) {=}
          [0014, 0014] (0004,                   id) {temp}
          [0014, 0018] (0043,            semicolon) {;}
  14  		}
  15  		gap = gap / 2; 
          [0016, 0001] (0015,             endScope) {}}
          [0016, 0004] (0004,                   id) {gap}
          [0016, 0008] (0040,             opAttrib) {=}
          [0016, 0010] (0004,                   id) {gap}
          [0016, 0014] (0025,                opDiv) {/}
          [0016, 0016] (0016,             constInt) {2}
          [0016, 0017] (0043,            semicolon) {;}
  16  	}
  17  }
          [0018, 0001] (0015,             endScope) {}}
  18  
          [0019, 0001] (0015,             endScope) {}}
  19  fun int main() {
          [0020, 0002] (0001,               funDef) {fun}
          [0020, 0006] (0008,              typeInt) {int}
          [0020, 0010] (0003,                 main) {main}
          [0020, 0014] (0005,             paramBeg) {(}
          [0020, 0015] (0006,             paramEnd) {)}
  20  	int arr(n);
          [0021, 0001] (0014,           beginScope) {{}
          [0021, 0003] (0008,              typeInt) {int}
          [0021, 0007] (0004,                   id) {arr}
          [0021, 0010] (0005,             paramBeg) {(}
          [0021, 0011] (0004,                   id) {n}
          [0021, 0012] (0006,             paramEnd) {)}
          [0021, 0013] (0043,            semicolon) {;}
  21  	read(arr);
          [0022, 0003] (0049,                 scan) {read}
          [0022, 0007] (0005,             paramBeg) {(}
          [0022, 0008] (0004,                   id) {arr}
          [0022, 0011] (0006,             paramEnd) {)}
          [0022, 0012] (0043,            semicolon) {;}
  22  	for (int i : (0, n, 1)) {
          [0023, 0003] (0044,              forLoop) {for}
          [0023, 0007] (0005,             paramBeg) {(}
          [0023, 0008] (0008,              typeInt) {int}
          [0023, 0012] (0004,                   id) {i}
          [0023, 0015] (0018,                colon) {:}
          [0023, 0016] (0005,             paramBeg) {(}
          [0023, 0017] (0016,             constInt) {0}
          [0023, 0018] (0007,             commaSep) {,}
          [0023, 0020] (0004,                   id) {n}
          [0023, 0021] (0007,             commaSep) {,}
          [0023, 0023] (0016,             constInt) {1}
          [0023, 0024] (0006,             paramEnd) {)}
          [0023, 0025] (0006,             paramEnd) {)}
  23  		print("%d ", arr[i]);
          [0024, 0001] (0014,           beginScope) {{}
          [0024, 0004] (0050,                print) {print}
          [0024, 0009] (0005,             paramBeg) {(}
          [0024, 0010] (0021,             constStr) {"%d "}
          [0024, 0015] (0007,             commaSep) {,}
          [0024, 0017] (0004,                   id) {arr}
          [0024, 0020] (0026,             arrBegin) {[}
          [0024, 0021] (0004,                   id) {i}
          [0024, 0022] (0027,               arrEnd) {]}
          [0024, 0023] (0006,             paramEnd) {)}
          [0024, 0024] (0043,            semicolon) {;}
  24  	}
  25  	shellSort(arr);
          [0026, 0001] (0015,             endScope) {}}
          [0026, 0003] (0004,                   id) {shellSort}
          [0026, 0012] (0005,             paramBeg) {(}
          [0026, 0013] (0004,                   id) {arr}
          [0026, 0016] (0006,             paramEnd) {)}
          [0026, 0017] (0043,            semicolon) {;}
  26  	for (int i : (0, n, 1)) {
          [0027, 0003] (0044,              forLoop) {for}
          [0027, 0007] (0005,             paramBeg) {(}
          [0027, 0008] (0008,              typeInt) {int}
          [0027, 0012] (0004,                   id) {i}
          [0027, 0015] (0018,                colon) {:}
          [0027, 0016] (0005,             paramBeg) {(}
          [0027, 0017] (0016,             constInt) {0}
          [0027, 0018] (0007,             commaSep) {,}
          [0027, 0020] (0004,                   id) {n}
          [0027, 0021] (0007,             commaSep) {,}
          [0027, 0023] (0016,             constInt) {1}
          [0027, 0024] (0006,             paramEnd) {)}
          [0027, 0025] (0006,             paramEnd) {)}
  27  		print("%d ", arr[i]);
          [0028, 0001] (0014,           beginScope) {{}
          [0028, 0004] (0050,                print) {print}
          [0028, 0009] (0005,             paramBeg) {(}
          [0028, 0010] (0021,             constStr) {"%d "}
          [0028, 0015] (0007,             commaSep) {,}
          [0028, 0017] (0004,                   id) {arr}
          [0028, 0020] (0026,             arrBegin) {[}
          [0028, 0021] (0004,                   id) {i}
          [0028, 0022] (0027,               arrEnd) {]}
          [0028, 0023] (0006,             paramEnd) {)}
          [0028, 0024] (0043,            semicolon) {;}
  28  	}
  29  	print("\n");
          [0030, 0001] (0015,             endScope) {}}
          [0030, 0003] (0050,                print) {print}
          [0030, 0008] (0005,             paramBeg) {(}
          [0030, 0009] (0021,             constStr) {"\n"}
          [0030, 0013] (0006,             paramEnd) {)}
          [0030, 0014] (0043,            semicolon) {;}
  30  	return 0;
          [0031, 0003] (0002,               funRet) {return}
          [0031, 0010] (0016,             constInt) {0}
          [0031, 0011] (0043,            semicolon) {;}
  31  }
          [0032, 0002] (0015,             endScope) {}}